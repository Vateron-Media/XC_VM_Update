name: Update GeoLite

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 0 */3 * *

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Download repository
      run: |
        git clone "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
    - name: Download GeoLite.mmdb
      run: |
        wget -nv -O- "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${{ secrets.LICENSE_KEY_MAXMIND }}&suffix=tar.gz" | tar zxv
        wget -nv -O- "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.LICENSE_KEY_MAXMIND }}&suffix=tar.gz" | tar zxv
        wget -nv -O- "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${{ secrets.LICENSE_KEY_MAXMIND }}&suffix=tar.gz" | tar zxv   
        cp -v GeoLite*/*.mmdb Xtream_Update
        echo "TAG_NAME=$(date +"%d.%m.%y")" >> $GITHUB_ENV 
    - name: Edit Json
      shell: bash
      run: |
        cd Xtream_Update
        echo $(jq --arg a "${{ env.TAG_NAME }}" '.version = ($a)' status.json) > status.json
    - name: Push to "download" branch
      run: |
        cd Xtream_Update
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        # git lfs track "*.mmdb"
        git add .gitattributes
        git add .
        git commit -m "${{ env.TAG_NAME }}"
        git push
    - name: Upload to Releases
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        body: ${{ env.TAG_NAME }}
        files: |
          Xtream_Update/*.mmdb

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
